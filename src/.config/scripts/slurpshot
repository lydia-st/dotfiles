#!/bin/bash

# Source: https://github.com/de-arl/slurpshot

SHOTPATH=$HOME/Pictures/
VIEWER=/usr/bin/imv-wayland

WINDOWS=$(swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.visible and .pid) | "\(.app_id) \(.rect.x),\(.rect.y) \(.rect.width)x\(.rect.height)"')
FOCUSED=$(swaymsg -t get_tree | jq '.. | (.nodes? // empty)[] | select(.focused and .pid) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')

CHOICE=$(echo -e "Fullscreen\nSelection\nFocus\n$WINDOWS\nAbort" | rofi -dmenu -p "Please select screenshot area:")

if [ $? = 1 ]; then exit 0; fi

FILENAME="${SHOTPATH}/screenshot-$(date +'%Y-%m-%d-%H%M%S.png')"
GRID=$(echo $CHOICE | awk '{print $2,$3}')

# Name printed when viewing screenshot, adjust if you edit FILENAME
FILENAME_SHORT=${FILENAME: -32}

if [ "$CHOICE" = Fullscreen ]; then
    grim "$FILENAME"
elif [ "$CHOICE" = Selection ]; then
    grim -g "$(slurp)" "$FILENAME"
elif [ "$CHOICE" = Focus ]; then
    grim -g "$(eval echo $FOCUSED)" "$FILENAME"
elif [ "$CHOICE" = Abort ]; then
    exit 0
else
    grim -g "$(eval echo $GRID)" "$FILENAME"
fi

WAHL=$(echo -e "View\nPrint and Save\nPrint and Discard\nSave\nDiscard" | rofi -dmenu -p "Screenshot taken")

if [ $? = 1 ]; then rm $FILENAME & exit 0; fi

if [ "$WAHL" = View ]; then
    $VIEWER $FILENAME &
    WAHL2=$(echo -e "Save\nPrint and Save\nPrint and Discard\nDiscard" | rofi -dmenu -p "${FILENAME_SHORT}")
    if [ $? = 1 ]; then
        rm $FILENAME &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 ${PID_VIEWER}
        exit 0
    fi
    if [ "$WAHL2" = Discard ]; then
        rm $FILENAME &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 ${PID_VIEWER}
    elif [ "$WAHL2" = "Print and Save" ]; then
        lpr $FILENAME &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 ${PID_VIEWER}
    elif [ "$WAHL2" = "Print and Discard" ]; then
        lpr $FILENAME &
        rm $FILENAME &
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 ${PID_VIEWER}
    else
        PID_VIEWER=$(pidof -s ${VIEWER})
        kill -9 ${PID_VIEWER}
        true
    fi
elif [ "$WAHL" = Discard ]; then
    rm $FILENAME
elif [ "$WAHL" = "Print and Save" ]; then
    lpr $FILENAME &
elif [ "$WAHL" = "Print and Discard" ]; then
    lpr $FILENAME
    rm $FILENAME &
else
    true
fi
exit 0
